{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Applied Tech. Project 47 - Question copy_v2","provenance":[{"file_id":"1Js9B8q45Co63zHu36PJ6s9LaiET4MhMV","timestamp":1620306409569}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"YZnBY81YDCCr"},"source":["### Instructions"]},{"cell_type":"markdown","metadata":{"id":"fIKnY8occu37"},"source":["#### Goal of the Project\n","\n","This project is designed for you to practice and solve the activities that are based on the concepts covered in the following lessons:\n","\n","1. String Operations\n","\n","2. Python Dictionary\n","\n","3. The Datetime Module\n"]},{"cell_type":"markdown","metadata":{"id":"thM8pM2PveAO"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"RX2PsejXvfJH"},"source":["#### Getting Started:\n","\n","1. Click on this link to open the Colab file for this project.\n","\n","    https://colab.research.google.com/drive/1Js9B8q45Co63zHu36PJ6s9LaiET4MhMV\n","\n","2. Create a duplicate copy of the Colab file as described below.\n","\n","  - Click on the **File menu**. A new drop-down list will appear.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/0_file_menu.png' width=500>\n","\n","  - Click on the **Save a copy in Drive** option. A duplicate copy will get created. It will open up in the new tab on your web browser.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/lesson-0/1_create_colab_duplicate_copy.png' width=500>\n","\n","3. After creating the duplicate copy of the notebook, please rename it in the **YYYY-MM-DD_StudentName_Project47** format.\n","\n","4. Now, write your code in the prescribed code cells.\n"]},{"cell_type":"markdown","metadata":{"id":"BBqkpH4_Doqe"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"H0P9F3DUf8x2"},"source":["### Activities\n","\n","\n","  "]},{"cell_type":"markdown","metadata":{"id":"BVT9G_baB1aq"},"source":["#### Activity 1: Additive and Multiplicative Persistence\n","\n","The **additive persistence** of an integer, `n`, is the number of times you have to replace `n` with the sum of its digits until `n` becomes a single-digit integer.\n","\n","The **multiplicative persistence** of an integer, `n`, is the number of times you have to replace `n` with the product of its digits until `n` becomes a single-digit integer.\n","\n","Create two functions: that takes an integer as an input and returns\n","\n","  1. The first function should take an integer as an input and return its additive persistence.\n","\n","  2. The second function should take an integer as an input and return its multiplicative persistence.\n","\n","\n","**Examples of Additive Persistence** \n","\n","```\n","1. additive_persistence(1679583) ➞ 3\n","```\n","\n","In the above example:\n","\n","- The sum of all the digits in the number `1679583` is `1 + 6 + 7 + 9 + 5 + 8 + 3 = 39`.\n","\n","- The sum of all the digits in the sum obtained in the first step is `3 + 9 = 12`.\n","\n","- The sum of all the digits in the sum obtained in the second step is `1 + 2 = 3`.\n","\n","Therefore, it takes 3 iterations to reach a single-digit number.\n","\n","Similarly, here are a few more examples of additive persistence:\n","\n","```\n","2. additive_persistence(123456) ➞ 2\n","# 1 + 2 + 3 + 4 + 5 + 6 = 21\n","# 2 + 1 = 3\n","\n","3. additive_persistence(6) ➞ 0\n","# Because 6 is already a single-digit integer.\n","```\n","\n","**Example of Multiplicative Persistence**\n","```\n","1. multiplicative_persistence(77) ➞ 4\n","```\n","\n","In the above example:\n","\n","- The product of all the digits in the number `77` is `7 x 7 = 49`.\n","\n","- The product of all the digits in the number obtained in the first step is `4 x 9 = 36`.\n","\n","- The product of all the digits in the number obtained in the second step is `3 x 6 = 18`.\n","\n","- The product of all the digits in the number obtained in the third step is `1 x 8 = 8`.\n","\n","Therefore, it takes 4 iterations to reach a single-digit number.\n","\n","Similarly, here are a few more examples of multiplicative persistence:\n","\n","```\n","2. multiplicative_persistence(123456) ➞ 2\n","# 1 x 2 x 3 x 4 x 5 x 6 = 720\n","# 7 x 2 x 0 = 0\n","\n","3. multiplicative_persistence(4) ➞ 0\n","# Because 4 is already a single-digit integer.\n","```\n","\n","**Hint:** Use `str()` function to convert integer  which is passed as parameter to string. This helps us to check whether `n` is a single digit number or not.\n","\n"]},{"cell_type":"code","metadata":{"id":"0pIGxKG9B3mb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620307149890,"user_tz":-330,"elapsed":956,"user":{"displayName":"Arhan Singhal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg4PdbuZAsAVBem9gfXxGllkTugQRSsMItz_luU=s64","userId":"10909470486853968911"}},"outputId":"eb656a81-b026-4609-e5c2-5065dae57bbf"},"source":["# Create a function to find the additive persistence\n","def additive(num):\n","  iter = 0\n","  while len(str(num))>1:\n","    sum = 0\n","    for i in str(num):\n","      sum = sum+int(i)\n","    num = sum\n","    iter = iter + 1\n","  return iter\n","\n","additive(5555)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"AQTbnSy9uwoh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620307252629,"user_tz":-330,"elapsed":1030,"user":{"displayName":"Arhan Singhal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg4PdbuZAsAVBem9gfXxGllkTugQRSsMItz_luU=s64","userId":"10909470486853968911"}},"outputId":"6f9af9f6-60a7-42b3-f5a8-18d083dbeed9"},"source":["# Create a function to find the multiplicative persistence\n","def multiplicative(num):\n","  iter = 0\n","  while len(str(num))>1:\n","    product = 1\n","    for i in str(num):\n","      product = product*int(i)\n","    num = product\n","    iter = iter + 1\n","  return iter\n","\n","multiplicative(77)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"IJIZASayCpEW"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"5kBinzKxn3hd"},"source":["#### Activity 2: Target Streak\n","\n","Create a function that takes two inputs; target date (eg. `\"2020-07-01\"`) and a list of date dictionaries; and returns an integer as an output.\n","\n","The output denotes **target streak**, i.e., the number of consecutive days in a row till the target date.\n","\n","\n","**Example:**\n","```\n","1. target_streak(\"2019-09-23\", [\n","  {\n","    \"date\": \"2019-09-18\"\n","  },\n","  {\n","    \"date\": \"2019-09-19\"\n","  },\n","  {\n","    \"date\": \"2019-09-21\"\n","  },\n","  {\n","    \"date\": \"2019-09-22\"\n","  },\n","  {\n","    \"date\": \"2019-09-23\"\n","  }\n","]) ➞ 3\n","```\n","\n","In the above example, there are 3 consecutive days till the target date `'2019-09-23'`. Hence, the output is 3.\n","\n","\n","Similarly, here are a few more examples:\n","```\n","2. target_streak(\"2019-09-25\", [\n","  {\n","    \"date\": \"2019-09-16\"\n","  },\n","  {\n","    \"date\": \"2019-09-17\"\n","  },\n","  {\n","    \"date\": \"2019-09-21\"\n","  },\n","  {\n","    \"date\": \"2019-09-22\"\n","  },\n","  {\n","    \"date\": \"2019-09-23\"\n","  }\n","]) ➞ 0\n","\n","```\n","\n","In the above example, there are 0 consecutive days till the target date `'2019-09-25'`. Hence, the output is 0.\n","\n","\n","```\n","3. target_streak(\"2019-09-25\", [\n","  {\n","    \"date\": \"2019-09-16\"\n","  },\n","  {\n","    \"date\": \"2019-09-17\"\n","  },\n","  {\n","    \"date\": \"2019-09-21\"\n","  },\n","  {\n","    \"date\": \"2019-09-22\"\n","  },\n","  {\n","    \"date\": \"2019-09-23\"\n","  },\n","  {\n","    \"date\": \"2019-09-24\"\n","  },\n","  {\n","    \"date\": \"2019-09-25\"\n","  }\n","]) ➞ 5\n","\n","```\n","\n","**Notes**\n","\n","- The list of dates is sorted chronologically.\n","\n","- The target date parameter will always be greater than or equal to the last date in the list of dates.\n","\n","- If the input list is an empty list, then the function should return `0`."]},{"cell_type":"code","metadata":{"id":"4gjDvOhzn6TL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620308207604,"user_tz":-330,"elapsed":916,"user":{"displayName":"Arhan Singhal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg4PdbuZAsAVBem9gfXxGllkTugQRSsMItz_luU=s64","userId":"10909470486853968911"}},"outputId":"6089fd72-af83-4657-aa9f-031f9990bb62"},"source":["# Write your solution here:\n","from datetime import datetime as dt\n","def cons(tar,dl):\n","  tar= dt.strptime(tar,\"%Y-%m-%d\")\n","  dl1 = [dt.strptime(i[\"date\"],\"%Y-%m-%d\") for i in dl]\n","  if tar not in dl1:\n","    return 0\n","  count = 1\n","  pos = dl1.index(tar)\n","  while (dl1[pos]-dl1[pos-1]).days== 1:\n","    count = count + 1\n","    pos = pos-1\n","  return count\n","dl = [\n","  {\n","    \"date\": \"2019-09-16\"\n","  },\n","  {\n","    \"date\": \"2019-09-17\"\n","  },\n","  {\n","    \"date\": \"2019-09-21\"\n","  },\n","  {\n","    \"date\": \"2019-09-22\"\n","  },\n","  {\n","    \"date\": \"2019-09-23\"\n","  },\n","  {\n","    \"date\": \"2019-09-24\"\n","  },\n","  {\n","    \"date\": \"2019-09-25\"\n","  }\n","]\n","cons(\"2019-09-25\", dl)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"MWkPEALQn-lN"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"7joqONQ3v8Qm"},"source":["### Submitting the Project:\n","\n","1. After finishing the project, click on the **Share** button on the top right corner of the notebook. A new dialog box will appear.\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/2_share_button.png' width=500>\n","\n","2. In the dialog box, make sure that '**Anyone on the Internet with this link can view**' option is selected and then click on the **Copy link** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/3_copy_link.png' width=500>\n","\n","3. The link of the duplicate copy (named as **YYYY-MM-DD_StudentName_Project47**) of the notebook will get copied \n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/4_copy_link_confirmation.png' width=500>\n","\n","4. Go to your dashboard and click on the **My Projects** option.\n","   \n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/5_student_dashboard.png' width=800>\n","\n","  <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/6_my_projects.png' width=800>\n","\n","5. Click on the **View Project** button for the project you want to submit.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/7_view_project.png' width=800>\n","\n","6. Click on the **Submit Project Here** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/8_submit_project.png' width=800>\n","\n","7. Paste the link to the project file named as **YYYY-MM-DD_StudentName_Project47** in the URL box and then click on the **Submit** button.\n","\n","   <img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project-share-images/9_enter_project_url.png' width=800> "]},{"cell_type":"markdown","metadata":{"id":"1Vx65kAMryuB"},"source":["---"]}]}